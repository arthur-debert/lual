#!/usr/bin/env bash
set -e

# Script to generate rockspecs from templates
# Usage: ./bin/create-specs

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
PROJECT_ROOT="$SCRIPT_DIR/.."
cd "$PROJECT_ROOT"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if VERSION file exists
VERSION_FILE="releases/VERSION"
if [ ! -f "$VERSION_FILE" ]; then
    print_error "VERSION file not found: $VERSION_FILE"
    exit 1
fi

# Read version
VERSION=$(cat "$VERSION_FILE" | tr -d '\n' | tr -d '\r')
if [ -z "$VERSION" ]; then
    print_error "VERSION file is empty"
    exit 1
fi

print_status "Using version: $VERSION"

# Check if template files exist
LUAL_TEMPLATE="releases/lual.spec.template"
LUALEXTRAS_TEMPLATE="releases/lualextras.spec.template"

if [ ! -f "$LUAL_TEMPLATE" ]; then
    print_error "Template not found: $LUAL_TEMPLATE"
    exit 1
fi

if [ ! -f "$LUALEXTRAS_TEMPLATE" ]; then
    print_error "Template not found: $LUALEXTRAS_TEMPLATE"
    exit 1
fi

# Generate lual rockspec
LUAL_SPEC="lual-${VERSION}-1.rockspec"
print_status "Generating $LUAL_SPEC from template..."
sed "s/@@VERSION/$VERSION/g" "$LUAL_TEMPLATE" >"$LUAL_SPEC"

# Generate lualextras rockspec
LUALEXTRAS_SPEC="lualextras-${VERSION}-1.rockspec"
print_status "Generating $LUALEXTRAS_SPEC from template..."
sed "s/@@VERSION/$VERSION/g" "$LUALEXTRAS_TEMPLATE" >"$LUALEXTRAS_SPEC"

# Check if luarocks is available
if ! command -v luarocks &>/dev/null; then
    print_warning "luarocks not found - skipping validation"
    print_success "Generated rockspecs:"
    print_success "  - $LUAL_SPEC"
    print_success "  - $LUALEXTRAS_SPEC"
    exit 0
fi

# Validate rockspecs
print_status "Validating $LUAL_SPEC..."
if luarocks lint "$LUAL_SPEC"; then
    print_success "$LUAL_SPEC validation passed"
else
    print_error "$LUAL_SPEC validation failed"
    exit 1
fi

print_status "Validating $LUALEXTRAS_SPEC..."
if luarocks lint "$LUALEXTRAS_SPEC"; then
    print_success "$LUALEXTRAS_SPEC validation passed"
else
    print_error "$LUALEXTRAS_SPEC validation failed"
    exit 1
fi

print_success "All rockspecs generated and validated successfully!"
print_status "Generated files:"
print_status "  - $LUAL_SPEC"
print_status "  - $LUALEXTRAS_SPEC"
print_status ""
print_status "Next steps:"
print_status "  1. Test: luarocks install $LUAL_SPEC"
print_status "  2. Test: luarocks install $LUALEXTRAS_SPEC"
print_status "  3. Upload: luarocks upload $LUAL_SPEC --api-key=YOUR_KEY"
print_status "  4. Upload: luarocks upload $LUALEXTRAS_SPEC --api-key=YOUR_KEY"
