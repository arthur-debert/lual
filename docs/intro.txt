lual, a lua l<ogger>.

lual is a focused but powerful and flexible logging library for lua. 
Inspired py Python's stdlib and loguru loggers, it aims at being a simple yet quite flexible loggers.

It borrows from Python but also leverages Lua's strengths, hence the entire
design is done over functions and tables, look ma, no classes.


    --  example: 

        local lual = require("lual.logger")
        local logger = lual.logger()
        logger:info("This is a debug message")
        -- the usual stuff
        logger:set_level(lual.debug)

        -- configure a more involved logger with flat namespace constants:
        local logger = lual.logger({
            dispatcher = lual.console,
            level = lual.debug,
            presenter = lual.color
        })
        
        local bigLogging = lual.logger({
            level = lual.debug,
            dispatchers = {
                {type = lual.console, presenter = lual.color, timezone = lual.utc},
                {type = lual.file, path = "app.log", presenter = lual.text, timezone = lual.local_time}
            }
        })
        
        -- of course you can imperatively add dispatchers and presenters:
        logger:add_dispatcher(lual.lib.console, lual.lib.text)

        -- supports structured logging:
        logger:info("Time to leave", {destination="home"})
        logger:info({msg = "Time to leave", destination="home"})

        
        
    -- lua

It has a small but useful set of dispatchers and presenters:
    dispatchers:
        console: prints to the console (lual.console)
        file: writes to a file (lual.file)
    presenters:
        text: plain text (lual.text)
        color: terminal colored (lual.color)
        json: as json (lual.json)
    levels:
        debug, info, warning, error, critical, none (lual.debug, lual.info, etc.)
    timezones:
        local time and UTC (lual.local_time, lual.utc)

But presenters and dispatchers are just functions, pass your own.

Names can be either introspected or set manually. There is hierarchical logging, with propagation, see docs/propagation.txt . 

**NAMING RESTRICTIONS**: Logger names starting with underscore (_) are reserved for internal use and cannot be used for user loggers. The only exception is "_root" which is the internal root logger.


INSTALLATION

    -- Lual is available as a LuaRocks module, so you can install it with:

        luarocks install lual

    -- shell






