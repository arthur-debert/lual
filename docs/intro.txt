lual, a lua l<ogger>.

lual is a focused but powerful and flexible logging library for lua. 
Inspired py Python's stdlib and loguru loggers, it aims at being a simple yet quite flexible loggers.

It borrows from Python but also leverages Lua's strengths, hence the entire
design is done over functions and tables, look ma, no classes.


    --  example: 

        local lual = require("lual")
        local logger = lual.get_logger()
        logger.info("This is a debug message")
        # the usual stuff
        logger:set_level("debug")

        # configure a more involved logger:
        local logger = lualog.logger({
            output: lual.lib.console
            level:lual.levels.DEBUG
            formatter: lual.lib.color
        })
        local  bigLogging = require("lualog").logger({
            name = "app.database",
             level = "debug",
            outputs = {
                {type = "console", formatter = "color"},
                {type = "file", path = "app.log", formatter = "text"}
            }
        })
        # of course you can imperatively add outputs and formatters:
        logger:add_output(lual.lib.console, lual.lib.text)

        # supports structured logging:
        logger:info("Time to leave", {destination="home"}
        logger:info({msg: "Time to leave", destination="home"}

        
        
    -- lua

It has a small but useful set of outputs and formatters:
    outputs:
        console: prints to the console
        file: writes to a file
    formatters:
        text: plain text
        color: terminal colored 
        json: as json
But formatters and outputs are just functions, pass your own.

Names can be either introspected or set manually. There is hierarchical logging, with propagation, see docs/propagation.txt . 


INSTALLATION

    -- Lual is available as a LuaRocks module, so you can install it with:

        luarocks install lual

    -- shell






