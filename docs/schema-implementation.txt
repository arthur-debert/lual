Schema-based Validation for Outputs and Formatters - FULLY COMPLETED


We have a half-way  there solution for validation now. 

In lua/lual/config/constants.lua we define a the values for a given fied like
this: 

 M.VALID_FORMATTER_TYPES = {
    _meta = { name = "formatter type", case_sensitive = false },
    text = true,
    color = true,
    json = true
}

this is working but it has a few nags. 
The first is that thing like name, required, etc are part of a schena, while
this should just be a list of valid valies.


Hence, what we want is to have a schema, like: 


ConfigSchema = {
    formatter_type = {

        multiple: false
        type = "string",
        values = M.VALID_FORMATTER_TYPES,
        required = true,
        description = "The type of formatter to use for output."
        error_message = "Invalid formatter type. Valid options are: text,
        color, json."
    },
    ... other  values go here
}

then validation can be automated by the schema.


Task: 
lets implement thsi
