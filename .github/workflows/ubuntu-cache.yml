name: Build and Test

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create apt cache directory
        run: |
          sudo mkdir -p /tmp/apt-cache
          sudo chmod 777 /tmp/apt-cache

      - name: Cache apt packages
        id: cache-apt
        uses: actions/cache@v4
        with:
          path: /tmp/apt-cache
          key: ${{ runner.os }}-apt-cache-${{ hashFiles('.github/apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-cache-
          fail-on-cache-miss: false

      - name: Configure apt to use cache directory
        run: |
          echo "Dir::Cache::Archives /tmp/apt-cache;" | sudo tee -a /etc/apt/apt.conf.d/01cache

      - name: Update apt package lists
        run: sudo apt-get update

      - name: Install apt dependencies
        run: |
          xargs -a .github/apt-packages.txt sudo apt-get install -y --no-install-recommends

      - name: Verify installed packages
        run: dpkg -l | grep build-essential # Example to check if installed

      - name: Run build/test commands
        run: |
          # Your actual build and test commands here
          echo "Building and testing..."

      - name: Verify cache content for saving
        run: |
          echo "Verifying cache content in /tmp/apt-cache..."
          echo "Cache directory contents:"
          ls -la /tmp/apt-cache/ | head -10
          
          # Check if cache has content to save
          CACHE_FILE_COUNT=$(find /tmp/apt-cache -type f | wc -l)
          CACHE_SIZE=$(du -sh /tmp/apt-cache | cut -f1)
          
          echo "Found $CACHE_FILE_COUNT files in cache"
          echo "Cache directory size: $CACHE_SIZE"
          
          if [ "$CACHE_FILE_COUNT" -eq 0 ]; then
            echo "ERROR: No cache content found - cache save will fail!"
            exit 1
          else
            echo "âœ… Cache content available for saving ($CACHE_FILE_COUNT files, $CACHE_SIZE)"
          fi